"use strict";(()=>{var e={};e.id=635,e.ids=[635],e.modules={67096:e=>{e.exports=require("bcrypt")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},85538:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>h,patchFetch:()=>x,requestAsyncStorage:()=>w,routeModule:()=>c,serverHooks:()=>g,staticGenerationAsyncStorage:()=>m});var s={};r.r(s),r.d(s,{POST:()=>l});var a=r(49303),o=r(88716),i=r(60670),n=r(67096),p=r.n(n),u=r(8690),d=r(87070);async function l(e){let{email:t,password:r}=await e.json();if(!t||!r)return new d.NextResponse("Missing Fields",{status:400});let s=t.toLowerCase();if(!await u._.user.findUnique({where:{email:s}}))throw Error("Email does not exists");let a=await p().hash(r,10);try{return await u._.user.update({where:{email:s},data:{password:a,passwordResetToken:null,passwordResetTokenExp:null}}),d.NextResponse.json("Password Updated",{status:200})}catch(e){return new d.NextResponse("Internal Error",{status:500})}}let c=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/forgot-password/update/route",pathname:"/api/forgot-password/update",filename:"route",bundlePath:"app/api/forgot-password/update/route"},resolvedPagePath:"/Users/hisbikal/Documents/GitHub/investment_calculator/src/app/api/forgot-password/update/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:w,staticGenerationAsyncStorage:m,serverHooks:g}=c,h="/api/forgot-password/update/route";function x(){return(0,i.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:m})}},8690:(e,t,r)=>{r.d(t,{_:()=>a});let s=require("@prisma/client"),a=global.prisma||new s.PrismaClient({log:["query"]})}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[948,972],()=>r(85538));module.exports=s})();