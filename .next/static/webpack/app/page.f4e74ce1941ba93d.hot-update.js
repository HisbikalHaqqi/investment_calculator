"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/helper/formatCurrency.tsx":
/*!***************************************!*\
  !*** ./src/helper/formatCurrency.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertToCurrency: function() { return /* binding */ convertToCurrency; },\n/* harmony export */   formatNumberWithCommas: function() { return /* binding */ formatNumberWithCommas; },\n/* harmony export */   parseNumber: function() { return /* binding */ parseNumber; },\n/* harmony export */   strCurrencyToInt: function() { return /* binding */ strCurrencyToInt; },\n/* harmony export */   validatePersentase: function() { return /* binding */ validatePersentase; }\n/* harmony export */ });\nconst formatNumberWithCommas = (value)=>{\n    const number = value.replace(/[^\\d]/g, \"\");\n    return Number(number).toLocaleString();\n};\nconst parseNumber = (value)=>{\n    return parseFloat(value.replace(/,/g, \"\")) || 0;\n};\nconst validatePersentase = (nilai)=>{\n    const regex = /(^100(\\.0{1,2})?$)|(^([1-9]([0-9])?|0)(\\.[0-9]{1,2})?$)/;\n    if (regex.test(nilai)) {\n        return true; // Valid input\n    } else {\n        return \"Format tidak valid (maksimal 3 digit sebelum koma, 2 digit setelah koma)\";\n    }\n};\nconst strCurrencyToInt = (nilai)=>{\n    var parse = parseInt(nilai.replace(/,/g, \"\"));\n    return parse;\n};\nconst convertToCurrency = (value)=>{\n    const locale = \"id-ID\";\n    const formatter = new Intl.NumberFormat(locale, {\n        style: \"currency\",\n        currency: \"IDR\"\n    });\n    const formattedNumber = formatter.format(value);\n    return formattedNumber;\n};\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9oZWxwZXIvZm9ybWF0Q3VycmVuY3kudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsTUFBTUEseUJBQXlCLENBQUNDO0lBRTlCLE1BQU1DLFNBQVNELE1BQU1FLE9BQU8sQ0FBQyxVQUFVO0lBQ3ZDLE9BQU9DLE9BQU9GLFFBQVFHLGNBQWM7QUFDdEM7QUFFQSxNQUFNQyxjQUFjLENBQUNMO0lBQ25CLE9BQU9NLFdBQVdOLE1BQU1FLE9BQU8sQ0FBQyxNQUFNLFFBQVE7QUFDaEQ7QUFFQSxNQUFNSyxxQkFBcUIsQ0FBQ0M7SUFDMUIsTUFBTUMsUUFBUTtJQUVkLElBQUlBLE1BQU1DLElBQUksQ0FBQ0YsUUFBUTtRQUNyQixPQUFPLE1BQU0sY0FBYztJQUM3QixPQUFPO1FBQ0wsT0FBTztJQUNUO0FBQ0Y7QUFFQSxNQUFNRyxtQkFBa0IsQ0FBQ0g7SUFDdkIsSUFBSUksUUFBUUMsU0FBU0wsTUFBTU4sT0FBTyxDQUFDLE1BQU07SUFDekMsT0FBT1U7QUFDVDtBQUVBLE1BQU1FLG9CQUFvQixDQUFDZDtJQUN6QixNQUFNZSxTQUFTO0lBRWYsTUFBTUMsWUFBWSxJQUFJQyxLQUFLQyxZQUFZLENBQUNILFFBQVE7UUFDOUNJLE9BQU87UUFDUEMsVUFBVTtJQUNaO0lBRUEsTUFBTUMsa0JBQWtCTCxVQUFVTSxNQUFNLENBQUN0QjtJQUN6QyxPQUFPcUI7QUFDVDtBQUVtRyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvaGVscGVyL2Zvcm1hdEN1cnJlbmN5LnRzeD8yYmQzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGZvcm1hdE51bWJlcldpdGhDb21tYXMgPSAodmFsdWU6IHN0cmluZyk6IHN0cmluZyA9PiB7XG5cbiAgY29uc3QgbnVtYmVyID0gdmFsdWUucmVwbGFjZSgvW15cXGRdL2csICcnKTtcbiAgcmV0dXJuIE51bWJlcihudW1iZXIpLnRvTG9jYWxlU3RyaW5nKCk7XG59O1xuXG5jb25zdCBwYXJzZU51bWJlciA9ICh2YWx1ZTogc3RyaW5nKTogbnVtYmVyID0+IHtcbiAgcmV0dXJuIHBhcnNlRmxvYXQodmFsdWUucmVwbGFjZSgvLC9nLCAnJykpIHx8IDA7XG59O1xuXG5jb25zdCB2YWxpZGF0ZVBlcnNlbnRhc2UgPSAobmlsYWk6IHN0cmluZyk6IHN0cmluZyB8IGJvb2xlYW4gPT4ge1xuICBjb25zdCByZWdleCA9IC8oXjEwMChcXC4wezEsMn0pPyQpfCheKFsxLTldKFswLTldKT98MCkoXFwuWzAtOV17MSwyfSk/JCkvO1xuXG4gIGlmIChyZWdleC50ZXN0KG5pbGFpKSkge1xuICAgIHJldHVybiB0cnVlOyAvLyBWYWxpZCBpbnB1dFxuICB9IGVsc2Uge1xuICAgIHJldHVybiBcIkZvcm1hdCB0aWRhayB2YWxpZCAobWFrc2ltYWwgMyBkaWdpdCBzZWJlbHVtIGtvbWEsIDIgZGlnaXQgc2V0ZWxhaCBrb21hKVwiO1xuICB9XG59O1xuXG5jb25zdCBzdHJDdXJyZW5jeVRvSW50PSAobmlsYWk6c3RyaW5nKSA9PiB7XG4gIHZhciBwYXJzZSA9IHBhcnNlSW50KG5pbGFpLnJlcGxhY2UoLywvZywgJycpKVxuICByZXR1cm4gcGFyc2Vcbn1cblxuY29uc3QgY29udmVydFRvQ3VycmVuY3kgPSAodmFsdWU6bnVtYmVyKSA9PiB7XG4gIGNvbnN0IGxvY2FsZSA9ICdpZC1JRCc7IFxuXG4gIGNvbnN0IGZvcm1hdHRlciA9IG5ldyBJbnRsLk51bWJlckZvcm1hdChsb2NhbGUsIHtcbiAgICBzdHlsZTogJ2N1cnJlbmN5JyxcbiAgICBjdXJyZW5jeTogJ0lEUidcbiAgfSk7XG5cbiAgY29uc3QgZm9ybWF0dGVkTnVtYmVyID0gZm9ybWF0dGVyLmZvcm1hdCh2YWx1ZSk7XG4gIHJldHVybiBmb3JtYXR0ZWROdW1iZXJcbn1cblxuZXhwb3J0ICB7Zm9ybWF0TnVtYmVyV2l0aENvbW1hcyxwYXJzZU51bWJlcix2YWxpZGF0ZVBlcnNlbnRhc2Usc3RyQ3VycmVuY3lUb0ludCxjb252ZXJ0VG9DdXJyZW5jeX07Il0sIm5hbWVzIjpbImZvcm1hdE51bWJlcldpdGhDb21tYXMiLCJ2YWx1ZSIsIm51bWJlciIsInJlcGxhY2UiLCJOdW1iZXIiLCJ0b0xvY2FsZVN0cmluZyIsInBhcnNlTnVtYmVyIiwicGFyc2VGbG9hdCIsInZhbGlkYXRlUGVyc2VudGFzZSIsIm5pbGFpIiwicmVnZXgiLCJ0ZXN0Iiwic3RyQ3VycmVuY3lUb0ludCIsInBhcnNlIiwicGFyc2VJbnQiLCJjb252ZXJ0VG9DdXJyZW5jeSIsImxvY2FsZSIsImZvcm1hdHRlciIsIkludGwiLCJOdW1iZXJGb3JtYXQiLCJzdHlsZSIsImN1cnJlbmN5IiwiZm9ybWF0dGVkTnVtYmVyIiwiZm9ybWF0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/helper/formatCurrency.tsx\n"));

/***/ })

});